import React, { useState, useEffect } from 'react';
import {
  Box,
  Grid,
  Card,
  CardContent,
  Typography,
  Table,
  TableBody,
  TableCell,
  TableContainer,
  TableHead,
  TableRow,
  Chip,
  Button,
  Alert,
  List,
  ListItem,
  ListItemText,
  ListItemIcon,
  Dialog,
  DialogTitle,
  DialogContent,
  DialogActions,
  TextField
} from '@mui/material';
import {
  Security,
  Warning,
  Error,
  Block,
  Visibility,
  Investigation,
  Shield,
  Report
} from '@mui/icons-material';
import api from '../utils/api';

const FraudDetectionSystem = () => {\n  const [fraudAlerts, setFraudAlerts] = useState([]);\n  const [loading, setLoading] = useState(true);\n  const [selectedAlert, setSelectedAlert] = useState(null);\n  const [investigationDialog, setInvestigationDialog] = useState(false);\n  const [investigationNotes, setInvestigationNotes] = useState('');\n\n  useEffect(() => {\n    loadFraudAlerts();\n    const interval = setInterval(loadFraudAlerts, 60000); // Refresh every minute\n    return () => clearInterval(interval);\n  }, []);\n\n  const loadFraudAlerts = async () => {\n    try {\n      const response = await api.get('/api/admin/fraud/alerts');\n      setFraudAlerts(response.data.alerts);\n    } catch (error) {\n      console.error('Failed to load fraud alerts:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const getSeverityColor = (severity) => {\n    switch (severity) {\n      case 'critical': return 'error';\n      case 'high': return 'error';\n      case 'medium': return 'warning';\n      case 'low': return 'info';\n      default: return 'default';\n    }\n  };\n\n  const getSeverityIcon = (severity) => {\n    switch (severity) {\n      case 'critical': return <Error />;\n      case 'high': return <Warning />;\n      case 'medium': return <Warning />;\n      case 'low': return <Security />;\n      default: return <Security />;\n    }\n  };\n\n  const getTypeIcon = (type) => {\n    switch (type) {\n      case 'multiple_accounts': return <Block />;\n      case 'document_fraud': return <Report />;\n      case 'suspicious_activity': return <Investigation />;\n      default: return <Security />;\n    }\n  };\n\n  const handleInvestigation = async () => {\n    try {\n      await api.post('/api/admin/fraud/investigate', {\n        alertId: selectedAlert.id,\n        notes: investigationNotes\n      });\n      setInvestigationDialog(false);\n      loadFraudAlerts();\n    } catch (error) {\n      console.error('Investigation failed:', error);\n    }\n  };\n\n  const criticalAlerts = fraudAlerts.filter(alert => alert.severity === 'critical');\n  const highAlerts = fraudAlerts.filter(alert => alert.severity === 'high');\n  const mediumAlerts = fraudAlerts.filter(alert => alert.severity === 'medium');\n  const lowAlerts = fraudAlerts.filter(alert => alert.severity === 'low');\n\n  return (\n    <Box p={3}>\n      <Typography variant=\"h5\" gutterBottom>\n        <Security sx={{ mr: 1, verticalAlign: 'middle' }} />\n        Fraud Detection System\n      </Typography>\n\n      {/* Alert Summary */}\n      <Grid container spacing={3} sx={{ mb: 3 }}>\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                <Error color=\"error\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Critical</Typography>\n              </Box>\n              <Typography variant=\"h3\" color=\"error\">\n                {criticalAlerts.length}\n              </Typography>\n              <Typography variant=\"body2\">\n                Immediate attention required\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                <Warning color=\"error\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">High Risk</Typography>\n              </Box>\n              <Typography variant=\"h3\" color=\"error\">\n                {highAlerts.length}\n              </Typography>\n              <Typography variant=\"body2\">\n                Requires investigation\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                <Warning color=\"warning\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Medium Risk</Typography>\n              </Box>\n              <Typography variant=\"h3\" color=\"warning.main\">\n                {mediumAlerts.length}\n              </Typography>\n              <Typography variant=\"body2\">\n                Monitor closely\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n\n        <Grid item xs={12} md={3}>\n          <Card>\n            <CardContent>\n              <Box display=\"flex\" alignItems=\"center\" mb={1}>\n                <Security color=\"info\" sx={{ mr: 1 }} />\n                <Typography variant=\"h6\">Low Risk</Typography>\n              </Box>\n              <Typography variant=\"h3\" color=\"info.main\">\n                {lowAlerts.length}\n              </Typography>\n              <Typography variant=\"body2\">\n                Routine monitoring\n              </Typography>\n            </CardContent>\n          </Card>\n        </Grid>\n      </Grid>\n\n      {/* Critical Alerts */}\n      {criticalAlerts.length > 0 && (\n        <Alert severity=\"error\" sx={{ mb: 3 }}>\n          <Typography variant=\"subtitle2\">Critical Fraud Alerts Detected!</Typography>\n          <Typography variant=\"body2\">\n            {criticalAlerts.length} critical fraud alert(s) require immediate attention.\n          </Typography>\n        </Alert>\n      )}\n\n      {/* Fraud Alerts Table */}\n      <Card>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            Fraud Alerts ({fraudAlerts.length} total)\n          </Typography>\n          \n          <TableContainer>\n            <Table>\n              <TableHead>\n                <TableRow>\n                  <TableCell>Alert Type</TableCell>\n                  <TableCell>User ID</TableCell>\n                  <TableCell>Description</TableCell>\n                  <TableCell>Severity</TableCell>\n                  <TableCell>Timestamp</TableCell>\n                  <TableCell>Actions</TableCell>\n                </TableRow>\n              </TableHead>\n              <TableBody>\n                {fraudAlerts.map((alert) => (\n                  <TableRow key={alert.id}>\n                    <TableCell>\n                      <Box display=\"flex\" alignItems=\"center\">\n                        {getTypeIcon(alert.type)}\n                        <Typography variant=\"body2\" sx={{ ml: 1 }}>\n                          {alert.type.replace('_', ' ').toUpperCase()}\n                        </Typography>\n                      </Box>\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant=\"body2\" fontFamily=\"monospace\">\n                        {alert.userId.substring(0, 8)}...\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant=\"body2\">\n                        {alert.description}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Chip \n                        icon={getSeverityIcon(alert.severity)}\n                        label={alert.severity.toUpperCase()}\n                        color={getSeverityColor(alert.severity)}\n                        size=\"small\"\n                      />\n                    </TableCell>\n                    <TableCell>\n                      <Typography variant=\"caption\">\n                        {new Date(alert.timestamp).toLocaleString()}\n                      </Typography>\n                    </TableCell>\n                    <TableCell>\n                      <Box display=\"flex\" gap={1}>\n                        <Button\n                          size=\"small\"\n                          startIcon={<Investigation />}\n                          onClick={() => {\n                            setSelectedAlert(alert);\n                            setInvestigationDialog(true);\n                          }}\n                        >\n                          Investigate\n                        </Button>\n                        <Button\n                          size=\"small\"\n                          startIcon={<Visibility />}\n                          color=\"info\"\n                        >\n                          View User\n                        </Button>\n                      </Box>\n                    </TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n          </TableContainer>\n        </CardContent>\n      </Card>\n\n      {/* Fraud Prevention Tips */}\n      <Card sx={{ mt: 3 }}>\n        <CardContent>\n          <Typography variant=\"h6\" gutterBottom>\n            <Shield sx={{ mr: 1, verticalAlign: 'middle' }} />\n            Fraud Prevention Measures\n          </Typography>\n          \n          <List>\n            <ListItem>\n              <ListItemIcon>\n                <Security color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText \n                primary=\"Multi-factor Authentication\"\n                secondary=\"All users must verify email and phone before account activation\"\n              />\n            </ListItem>\n            \n            <ListItem>\n              <ListItemIcon>\n                <Report color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText \n                primary=\"Document Verification\"\n                secondary=\"KYC documents are manually reviewed by admin team\"\n              />\n            </ListItem>\n            \n            <ListItem>\n              <ListItemIcon>\n                <Investigation color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText \n                primary=\"Behavioral Analysis\"\n                secondary=\"Automated detection of suspicious activity patterns\"\n              />\n            </ListItem>\n            \n            <ListItem>\n              <ListItemIcon>\n                <Block color=\"primary\" />\n              </ListItemIcon>\n              <ListItemText \n                primary=\"IP Monitoring\"\n                secondary=\"Detection of multiple accounts from same IP address\"\n              />\n            </ListItem>\n          </List>\n        </CardContent>\n      </Card>\n\n      {/* Investigation Dialog */}\n      <Dialog open={investigationDialog} onClose={() => setInvestigationDialog(false)} maxWidth=\"md\" fullWidth>\n        <DialogTitle>Fraud Investigation</DialogTitle>\n        <DialogContent>\n          {selectedAlert && (\n            <Box>\n              <Typography variant=\"subtitle2\" gutterBottom>\n                Alert Type: {selectedAlert.type.replace('_', ' ').toUpperCase()}\n              </Typography>\n              \n              <Typography variant=\"body2\" sx={{ mb: 2, p: 2, bgcolor: 'grey.100', borderRadius: 1 }}>\n                {selectedAlert.description}\n              </Typography>\n              \n              <Box display=\"flex\" gap={1} mb={2}>\n                <Chip \n                  label={selectedAlert.severity.toUpperCase()}\n                  color={getSeverityColor(selectedAlert.severity)}\n                  size=\"small\"\n                />\n                <Chip \n                  label={new Date(selectedAlert.timestamp).toLocaleString()}\n                  size=\"small\"\n                  variant=\"outlined\"\n                />\n              </Box>\n              \n              <TextField\n                fullWidth\n                multiline\n                rows={4}\n                label=\"Investigation Notes\"\n                value={investigationNotes}\n                onChange={(e) => setInvestigationNotes(e.target.value)}\n                placeholder=\"Document your investigation findings, actions taken, and recommendations...\"\n              />\n            </Box>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={() => setInvestigationDialog(false)}>Cancel</Button>\n          <Button onClick={handleInvestigation} variant=\"contained\">\n            Complete Investigation\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n};\n\nexport default FraudDetectionSystem;